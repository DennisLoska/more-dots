# set default shell
set-option -g default-shell /bin/zsh

# enables window scrolling
set -g mouse on

# step through windows
bind-key -n "C-;" next-window
unbind C-j

# tmux with style
set -g default-terminal "xterm-256color"
# set -g status-style bg=default

set -g status-interval 5
set-window-option -g mode-keys vi

# panes
set -g pane-border-style 'fg=red'
set -g pane-active-border-style 'fg=yellow'

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'fg=black bg=black'

set -g status-left ''
set -g status-left-length 10

set -g status-right-style 'fg=white bg=black'
set -g status-right "#{s|$HOME|~â€¦|:pane_current_path} %H:%M"
set -g status-right-length 50

setw -g window-status-current-style 'fg=black bg=gold'
setw -g window-status-current-format ' #W '

setw -g window-status-style 'fg=red bg=black'
setw -g window-status-format ' #[fg=white]#W#[fg=yellow] '

setw -g window-status-bell-style 'fg=yellow bg=red bold'

# messages
set -g message-style 'fg=yellow bg=red bold'

# custom tmux prefix
set -g prefix C-t
unbind C-b
bind-key C-t send-prefix

# better splits
unbind %
bind v split-window -h

unbind '"'
bind h split-window -v

# best splits
bind-key -n C-f split-window -h -c "#{pane_current_path}" 
bind-key -n C-a split-window -v -c "#{pane_current_path}" 

# resize panes
bind-key k resize-pane -U 20
bind-key j resize-pane -D 20
bind-key h resize-pane -L 20
bind-key l resize-pane -R 20

# x marks the spot
unbind x
bind-key x kill-session

# Kill deez panes
bind-key -n C-x kill-pane

# source, trust me bro
unbind r
bind r source-file ~/.tmux.conf

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# start selecting text with "v"
bind-key -T copy-mode-vi 'v' send -X begin-selection 

# copy text with "y"
bind-key -T copy-mode-vi 'y' send -X copy-selection 

# don't exit copy mode after dragging with mouse
unbind -T copy-mode-vi MouseDragEnd1Pane

# split horizontally and open opencode in current directory
bind-key -n C-g split-window -h -c "#{pane_current_path}" opencode
